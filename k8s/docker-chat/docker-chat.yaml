kind: Service
apiVersion: v1
metadata:
  name: docker-chat
spec:
  selector:
    app: docket-chat
    tier: backend
  ports:
    - protocol: TCP
      port: 3000
      name: http
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: docker-chat
  metadata:
      labels:
        app: docker-chat
        tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-chat
  template:
    metadata:
      labels:
        app: docker-chat
        tier: backend
    spec:
      containers:
        - name: "docker-chat"
          image: "ageapps/docker-chat:app"
          # image: "eu.gcr.io/mashmetv/backend:ws-redis"
          imagePullPolicy: Always
          env:
          - name: PORT
            valueFrom:
            configMapKeyRef:
              name: global-config
              key: app.port
          - name: DEBUG
            value: "docker-chat:*"
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                name: global-config
                key: app.redis_host

          - name: MONGO_PASSWORD
            valueFrom:
            configMapKeyRef:
              name: global-config
              key: db.password
          - name: MONGO_USERNAME
            valueFrom:
            configMapKeyRef:
              name: global-config
              key: db.username
          - name: MONGO_DATABASE
            valueFrom:
            configMapKeyRef:
              name: global-config
              key: db.database
          ######   DEVELOPMENT VARIABLE #######
          - name: REDEPLOY_VAR
            value: "v1"


          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 10
          ports:
            - containerPort: 3000
          command: ["bash", "-c", "nodemon ./bin/www"]
